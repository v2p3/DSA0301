import nltk

# Define a simple PCFG
pcfg_grammar = nltk.PCFG.fromstring("""
    S -> NP VP [0.7] | NP V [0.3]
    NP -> Det N [0.4] | 'John' [0.3] | 'Mary' [0.3]
    VP -> V NP [0.6] | 'likes' [0.4]
    Det -> 'the' [0.8] | 'a' [0.2]
    N -> 'dog' [0.5] | 'cat' [0.5]
    V -> 'chases' [0.7] | 'likes' [0.3]
""")

# Create a probabilistic parser using the PCFG
parser = nltk.ViterbiParser(pcfg_grammar)

# Input sentence
sentence = "John likes the cat"

# Tokenize the sentence
tokens = sentence.split()

# Parse the sentence
for tree in parser.parse(tokens):
    tree.pretty_print()
    print("Probability:", tree.prob())

